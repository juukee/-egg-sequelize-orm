# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Fscz CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:

    - name: Checkout Branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    
    - name: Prepare Node env
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Node Modules
      run: |
        yarn --frozen-lockfile --ignore-engines --ignore-optional --non-interactive --silent --ignore-scripts --production=false
      env:
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
        HUSKY_SKIP_INSTALL: true

    - name: CI 
      run: |
        npm i -g npminstall && npminstall
        npm run ci
        npm run test
      env:
        CI: true

  releases-build:
    needs: build
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image
        image: mysql
        env:
          MYSQL_HOST: localhost
          MYSQL_PORT: 3306
          MYSQL_ROOT_PASSWORD: ''
   
        # Set health checks to wait until redis has started
        # options: >-
        #   --health-cmd "redis-cli ping"
        #   --health-interval 10s
        #   --health-timeout 5s
        #   --health-retries 5

    steps:
      
      - name: Checkout Branch
        uses: actions/checkout@v2

      - name: Auto Tag  
        uses: Klemensas/action-autotag@stable
        with:         
          tag_prefix: "v"
          changelog_structure: "**{{messageHeadline}}** {{author}}\n"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
          


